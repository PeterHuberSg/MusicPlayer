<Window x:Class="MusicPlayer.ImportWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MusicPlayer"
        mc:Ignorable="d"
        Title="Import Tracks" WindowState="Maximized">
  <Window.Resources>
    <CollectionViewSource x:Key="TracksViewSource" CollectionViewType="ListCollectionView"/>
  </Window.Resources>

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="auto"/>
      <RowDefinition Height="auto"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="auto"/>
      <RowDefinition Height="auto"/>
      <RowDefinition/>
    </Grid.RowDefinitions>
    
    <DockPanel Grid.Row="0" Grid.Column="0" Background="Gainsboro">
      <DockPanel.Resources>
        <Style TargetType="Button">
          <Setter Property="Margin" Value="5, 3, 5, 3"/>
        </Style>
        <Style TargetType="TextBox">
          <Setter Property="Margin" Value="0, 3, 5, 3"/>
        </Style>
      </DockPanel.Resources>
      <Button DockPanel.Dock="Right" x:Name="ChangeDirectoryButton" Content="_Change" ToolTip="Change import directory"/>
      <TextBox DockPanel.Dock="Right" x:Name="ImportTextBox" Width="200" IsReadOnly="True" Background="Transparent"/>
      <TextBox x:Name="DirectoryTextBox"/>
    </DockPanel>

    <Grid Grid.Row="1" HorizontalAlignment="Stretch" Background="Violet">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="3"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="9"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="9"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.Resources>
        <Style TargetType="Label">
          <Setter Property="Margin" Value="3,0,5,0"/>
          <Setter Property="Padding" Value="0"/>
          <Setter Property="HorizontalAlignment" Value="Left"/>
          <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBox">
          <Setter Property="Margin" Value="0,0,2,2"/>
          <Setter Property="HorizontalAlignment" Value="Stretch"/>
          <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="ComboBox">
          <Setter Property="Margin" Value="2,0,2,3"/>
          <Setter Property="HorizontalAlignment" Value="Stretch"/>
          <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="CheckBox">
          <Setter Property="HorizontalAlignment" Value="Center"/>
          <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="Button">
          <Setter Property="Margin" Value="2,0,2,2"/>
          <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
      </Grid.Resources>

      <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="13" Fill="LightCoral"/>
      <TextBlock Grid.Row="0" Grid.Column="1" FontWeight="Bold" VerticalAlignment="Center">Filter:</TextBlock>
      <TextBox Grid.Row="1" Grid.Column="1" Name="FilterTextBox"/>
      <Label Grid.Row="0" Grid.Column="2" Target="{Binding ElementName=ArtistComboBox}" Content="_Artist:"/>
      <ComboBox Grid.Row="1" Grid.Column="2" x:Name="ArtistComboBox"/>
      <Label Grid.Row="0" Grid.Column="3" Target="{Binding ElementName=AlbumComboBox}" Content="_Album:"/>
      <ComboBox Grid.Row="1" Grid.Column="3" x:Name="AlbumComboBox"/>
      <Label Grid.Row="0" Grid.Column="4" Target="{Binding ElementName=ComposerComboBox}" Content="_Composer:"/>
      <ComboBox Grid.Row="1" Grid.Column="4" x:Name="ComposerComboBox" />
      <Label Grid.Row="0" Grid.Column="5" Target="{Binding ElementName=PublisherComboBox}" Content="_Publisher:"/>
      <ComboBox Grid.Row="1" Grid.Column="5" x:Name="PublisherComboBox" />
      <Label Grid.Row="0" Grid.Column="6" Target="{Binding ElementName=GenreComboBox}" Content="_Genre:"/>
      <ComboBox Grid.Row="1" Grid.Column="6" x:Name="GenreComboBox"/>
      <Label Grid.Row="0" Grid.Column="7" Target="{Binding ElementName=YearComboBox}" Content="_Year:"/>
      <ComboBox Grid.Row="1" Grid.Column="7" x:Name="YearComboBox" Width="40"/>
      <Label Grid.Row="0" Grid.Column="8" Target="{Binding ElementName=ImportCheckBox}" Content="_Imp."/>
      <CheckBox Grid.Row="1" Grid.Column="8" x:Name="ImportCheckBox" IsThreeState="true" IsChecked="{x:Null}" 
                ToolTip="Filter tracks which are marked for import or not."/>
      <Label Grid.Row="0" Grid.Column="9" Target="{Binding ElementName=PlaylistCheckBox}" Content="_PL"/>
      <CheckBox Grid.Row="1" Grid.Column="9" x:Name="PlaylistCheckBox" IsThreeState="true" IsChecked="{x:Null}" 
                ToolTip="Filter tracks which are marked to be included in the Playlist or not."/>
      <Label Grid.Row="0" Grid.Column="10" Target="{Binding ElementName=ExistCheckBox}" Content="_Ex."/>
      <CheckBox Grid.Row="1" Grid.Column="10" x:Name="ExistCheckBox" IsThreeState="true" IsChecked="{x:Null}" 
                ToolTip="Filter tracks which are imported into MusicPlayer already or not."/>
      <Label Grid.Row="0" Grid.Column="11" Target="{Binding ElementName=DuplicateCheckBox}" Content="_Dup."/>
      <CheckBox Grid.Row="1" Grid.Column="11" x:Name="DuplicateCheckBox" IsThreeState="true" IsChecked="{x:Null}" 
                ToolTip="Filter tracks which are twice in the import list."/>
      <Button Grid.Row="1" Grid.Column="12" x:Name="ClearButton" Content="_Clear"
              ToolTip="Clears all filter settings and displays all tracks."/>

      <TextBox Grid.Row="0" Grid.Column="14" Grid.ColumnSpan="3" x:Name="SelectedCountTextBox" IsReadOnly="True"
               VerticalAlignment="Bottom"/>
      <Button Grid.Row="1" Grid.Column="14" x:Name="ImportAllButton" Content="_Import all"
              ToolTip="Marks all tracks which have not been imported yet for importation."/>
      <Button Grid.Row="1" Grid.Column="15" x:Name="PLAllButton" Content="_PL all"
              ToolTip="Marks all tracks to be included into the playlist selected in the footer of the window."/>
      <Button Grid.Row="1" Grid.Column="16" x:Name="UnselectAllButton" Content="_Unselect"
              ToolTip="Unselects all tracks selected for import or inclusion to playlist."/>

      <Rectangle Grid.Row="0" Grid.Column="18" Grid.RowSpan="2" Grid.ColumnSpan="1" Fill="LightCoral"/>
      <Button Grid.Row="1" Grid.Column="18" x:Name="RenameTrackButton" Content="Re_name"
              ToolTip="Opens Rename Window for presently selected track."/>
    </Grid>


    <DataGrid Grid.Row="2" Grid.Column="0" x:Name="TracksDataGrid"
              DataContext="{StaticResource TracksViewSource}" ItemsSource="{Binding}" AutoGenerateColumns="False" 
              EnableRowVirtualization="True" RowDetailsVisibilityMode="Collapsed" EnableColumnVirtualization="False"
              AllowDrop="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False">
      <DataGrid.Resources>
        <Style x:Key="RightAlignStyle" TargetType="TextBlock">
          <Setter Property="HorizontalAlignment" Value="Right" />
          <Setter Property="Margin" Value="2,0,2,0" />
        </Style>
        <!--<Style x:Key="ImportStyle" TargetType="CheckBox">
          --><!--Setting the ElementStyle of a DataGridCheckBoxColumn makes it possible that just one click is enough enstead of 2--><!--
          <Setter Property="Visibility" 
                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, 
                    Path =Item.ImportCheckBoxVisibility}" />
          <Setter Property="VerticalAlignment" Value="Center"/>
          <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>-->
        <Style x:Key="ImportHeaderStyle" TargetType="DataGridColumnHeader">
          <Setter Property="ToolTip" Value="Import track, which is only possible if it is not imported yet (= Exists)."/>
        </Style>
        <Style x:Key="PlaylistHeaderStyle" TargetType="DataGridColumnHeader">
          <Setter Property="ToolTip" Value="Add track to playlist, regardless if it just gets imported or it exists already. Only available if Playlist is selected in the footer of the window."/>
        </Style>
        <DataTemplate x:Key="ImportCheckBoxTemplate">
          <CheckBox IsChecked="{Binding Path=IsImport, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                    IsEnabled="{Binding ImportCheckBoxIsEnabled}" Visibility="{Binding ImportCheckBoxVisibility}"
                    VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </DataTemplate>
        <DataTemplate x:Key="PlaylistCheckBoxTemplate">
          <CheckBox IsChecked="{Binding Path=IsAddPlaylist, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                    IsEnabled="{Binding PlaylistCheckBoxIsEnabled}" Visibility="{Binding PlaylistCheckBoxVisibility}"
                    VerticalAlignment="Center" HorizontalAlignment="Center"/>
          <!--<DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsMonday}" Value="True">
              <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
          </DataTemplate.Triggers>-->
        </DataTemplate>
      </DataGrid.Resources>
      <DataGrid.Columns>
        <DataGridTextColumn Binding="{Binding Path=No, StringFormat=N0}" Header="#"  
                            ElementStyle="{StaticResource RightAlignStyle}" IsReadOnly="True" Width="45"/>
        <DataGridTextColumn Binding="{Binding Path=Track.Title}" Header="Title" IsReadOnly="True" Width="3*"/>
        <DataGridTextColumn Binding="{Binding Path=Track.Duration, StringFormat=mm\\:ss}" Header="Duration" 
                            ElementStyle="{StaticResource RightAlignStyle}" IsReadOnly="True" Width="SizeToHeader"/>
        <DataGridTextColumn Binding="{Binding Path=Track.Album}" Header="Album" IsReadOnly="True" Width="3*"/>
        <DataGridTextColumn Binding="{Binding Path=Track.AlbumTrack}" Header="Track" IsReadOnly="True" Width="30"/>
        <DataGridTextColumn Binding="{Binding Path=Track.Artists}" Header="Artists" IsReadOnly="True" Width="2*"/>
        <DataGridTextColumn Binding="{Binding Path=Track.Composers}" Header="Composers" IsReadOnly="True" Width="2*"/>
        <DataGridTextColumn Binding="{Binding Path=Track.Publisher}" Header="Publisher" IsReadOnly="True" Width="*"/>
        <DataGridTextColumn Binding="{Binding Path=Track.Year}" Header="Year   " IsReadOnly="True" Width="SizeToHeader"/>
        <DataGridTextColumn Binding="{Binding Path=Track.Genres}" Header="Genres" IsReadOnly="True" Width="*"/>
        <!--<DataGridCheckBoxColumn Binding="{Binding Path=IsImport, UpdateSourceTrigger=PropertyChanged}" Header="Import"
                                ElementStyle="{StaticResource ImportStyle}" />-->
        <DataGridTemplateColumn Header="Import" CellTemplate="{StaticResource ImportCheckBoxTemplate}" 
                                HeaderStyle="{StaticResource ImportHeaderStyle}" SortMemberPath="IsImport"/>
        <DataGridTemplateColumn Header="PList" CellTemplate="{StaticResource PlaylistCheckBoxTemplate}"
                                HeaderStyle="{StaticResource PlaylistHeaderStyle}" SortMemberPath="IsAddPlaylist"/>
        <DataGridCheckBoxColumn Binding="{Binding Path=IsExisting, Mode=OneTime}" Header="Exists" IsReadOnly="True">
          <DataGridCheckBoxColumn.HeaderStyle>
            <Style TargetType="DataGridColumnHeader">
              <Setter Property="ToolTip" Value="If a track has been imported before, it is marked as Exists."/>
            </Style>
          </DataGridCheckBoxColumn.HeaderStyle>
        </DataGridCheckBoxColumn>
        <DataGridCheckBoxColumn Binding="{Binding Path=IsDouble, Mode=OneTime}" Header="Dupl." IsReadOnly="True">
          <DataGridCheckBoxColumn.HeaderStyle>
            <Style TargetType="DataGridColumnHeader">
              <Setter Property="ToolTip" Value="Two tracks are marked as dupplicates if they have the same title and artist."/>
            </Style>
          </DataGridCheckBoxColumn.HeaderStyle>
        </DataGridCheckBoxColumn>
      </DataGrid.Columns>
    </DataGrid>

    <DockPanel Grid.Row="3" Grid.Column="0" Background="Gainsboro">
      <DockPanel.Resources>
        <Style TargetType="Button">
          <Setter Property="Margin" Value="5, 3, 5, 3"/>
        </Style>
        <Style TargetType="TextBox">
          <Setter Property="Margin" Value="0, 3, 5, 3"/>
        </Style>
        <Style TargetType="ComboBox">
          <Setter Property="Margin" Value="0, 3, 5, 3"/>
        </Style>
      </DockPanel.Resources>
      <Label Target="{Binding ElementName=LocationTextBox}" Content="_Abbreviation:"/>
      <TextBox x:Name="LocationTextBox" Width="150" ToolTip="A short name for import directory" VerticalAlignment="Center"/>
      <Label Target="{Binding ElementName=PlaylistComboBox}" Content="_Playlist:" VerticalAlignment="Center"/>
      <ComboBox x:Name="PlaylistComboBox" IsEditable="True" Width="150" VerticalAlignment="Center"/>
      <Button x:Name="ImportButton" Content="_Import" Margin="20,5,5,5"/>
    </DockPanel>

    <local:PlayerControl Grid.Row="4" Grid.Column="0" x:Name="TrackPlayer"/>

    <TextBox Grid.Row="5" Grid.Column="0" x:Name="TraceTextBox" VerticalScrollBarVisibility="Visible"/>
  </Grid>
</Window>
