<Window x:Class="MusicPlayer.TracksWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MusicPlayer"
        mc:Ignorable="d"
        Title="Tracks">
  <Window.Resources>
    <CollectionViewSource x:Key="TracksViewSource" CollectionViewType="ListCollectionView"/>
  </Window.Resources>

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="auto"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="auto"/>
    </Grid.RowDefinitions>

    <Grid Grid.Row="0" HorizontalAlignment="Stretch" Background="Violet">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="3"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="9"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="9"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="9"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.Resources>
        <Style TargetType="Label">
          <Setter Property="Margin" Value="3,0,5,0"/>
          <Setter Property="Padding" Value="0"/>
          <Setter Property="HorizontalAlignment" Value="Left"/>
          <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBox">
          <Setter Property="Margin" Value="0,0,2,2"/>
          <Setter Property="HorizontalAlignment" Value="Stretch"/>
          <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="ComboBox">
          <Setter Property="Margin" Value="2,0,2,3"/>
          <Setter Property="HorizontalAlignment" Value="Stretch"/>
          <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="CheckBox">
          <Setter Property="HorizontalAlignment" Value="Center"/>
          <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="Button">
          <Setter Property="Margin" Value="2,0,2,2"/>
          <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
      </Grid.Resources>

      <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="11" Fill="LightCoral"/>
      <TextBlock Grid.Row="0" Grid.Column="1" FontWeight="Bold">Filter:</TextBlock>
      <TextBox Grid.Row="1" Grid.Column="1" Name="FilterTextBox"/>
      <Label Grid.Row="0" Grid.Column="2" Target="{Binding ElementName=ArtistComboBox}" Content="_Artist:"/>
      <ComboBox Grid.Row="1" Grid.Column="2" x:Name="ArtistComboBox"/>
      <Label Grid.Row="0" Grid.Column="3" Target="{Binding ElementName=AlbumComboBox}" Content="_Album:"/>
      <ComboBox Grid.Row="1" Grid.Column="3" x:Name="AlbumComboBox"/>
      <Label Grid.Row="0" Grid.Column="4" Target="{Binding ElementName=GenreComboBox}" Content="_Genre:"/>
      <ComboBox Grid.Row="1" Grid.Column="4" x:Name="GenreComboBox"/>
      <Label Grid.Row="0" Grid.Column="5" Target="{Binding ElementName=YearComboBox}" Content="_Year:"/>
      <ComboBox Grid.Row="1" Grid.Column="5" x:Name="YearComboBox" Width="54"/>
      <Label Grid.Row="0" Grid.Column="6" Target="{Binding ElementName=LocationsComboBox}" Content="_Locations:"/>
      <ComboBox Grid.Row="1" Grid.Column="6" x:Name="LocationsComboBox"/>
      <Label Grid.Row="0" Grid.Column="7" Target="{Binding ElementName=PlaylistsComboBox}" Content="_Playlists:"/>
      <ComboBox Grid.Row="1" Grid.Column="7" x:Name="PlaylistsComboBox"/>
      <Label Grid.Row="0" Grid.Column="8" Target="{Binding ElementName=DeleteCheckBox}" Content="_Del:"/>
      <CheckBox Grid.Row="1" Grid.Column="8" x:Name="DeleteCheckBox" IsThreeState="true" IsChecked="{x:Null}" 
                  ToolTip="Filter tracks which are marked for deletion or not."/>
      <Label Grid.Row="0" Grid.Column="9" Target="{Binding ElementName=PlaylistCheckBox}" Content="_PList:"/>
      <CheckBox Grid.Row="1" Grid.Column="9" x:Name="PlaylistCheckBox" IsThreeState="true" IsChecked="{x:Null}" 
                ToolTip="Filter tracks which are marked to be included in the Playlist or not."/>
      <Button Grid.Row="1" Grid.Column="10" x:Name="ClearButton" Content="_Clear"
              ToolTip="Clears all filter settings and displays all tracks."/>

      <TextBox Grid.Row="0" Grid.Column="12" Grid.ColumnSpan="3" x:Name="SelectedCountTextBox" IsReadOnly="True"
               VerticalAlignment="Bottom"/>
      <Button Grid.Row="1" Grid.Column="12" x:Name="DeleteAllButton" Content="_Delete all"
              ToolTip="Marks all tracks for deletion. Click on the button 'Execute Delete' to actually delete the tracks."/>
      <Button Grid.Row="1" Grid.Column="13" x:Name="PLAllButton" Content="_PL all" IsEnabled="False"
              ToolTip="Marks all tracks to be included into the selected playlist, if the track is not marked for deletion."/>
      <Button Grid.Row="1" Grid.Column="14" x:Name="UnselectAllButton" Content="_Unselect"
              ToolTip="Unselects all tracks selected for deletion or inclusion to playlist."/>
      <Button Grid.Row="0" Grid.Column="15" Grid.RowSpan="2" x:Name="ExecuteDeleteButton" Content="Execute&#10;_Delete" 
              VerticalAlignment="Stretch" Margin="2,1,2,4" ToolTip="Delete the tracks marked for deletion."/>
      
      <Rectangle Grid.Row="0" Grid.Column="17" Grid.RowSpan="2" Grid.ColumnSpan="2" Fill="LightCoral"/>
      <Label Grid.Row="0" Grid.Column="17" Target="{Binding ElementName=AddToPlaylistComboBox}" Content="_Playlist:"/>
      <ComboBox Grid.Row="1" Grid.Column="17" x:Name="AddToPlaylistComboBox" IsEditable="True"
                ToolTip="Select an existing or enter a new playlist to which the tracks should get added."/>
      <Button Grid.Row="1" Grid.Column="18" x:Name="AddToPlaylistButton" Content="_Add to Playlist" IsEnabled="False"
              ToolTip="Add the tracks marked in the PList column to the selected playlist."/>
      
      <Button Grid.Row="1" Grid.Column="20" x:Name="RenameTrackButton" Content="Re_name"
              ToolTip="Opens Rename Window for presently selected track."/>
    </Grid>


    <DataGrid Grid.Row="1" x:Name="TracksDataGrid"
              DataContext="{StaticResource TracksViewSource}" ItemsSource="{Binding}" AutoGenerateColumns="False" 
              EnableRowVirtualization="True" RowDetailsVisibilityMode="Collapsed" EnableColumnVirtualization="False"
              AllowDrop="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False">
      <DataGrid.Resources>
        <!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{x:Static SystemColors.HighlightColor}"/>-->
        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{x:Static SystemColors.HighlightColor}"/>
        <!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="White"/>-->
        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White"/>
        <Style x:Key="RightAlignStyle" TargetType="TextBlock">
          <Setter Property="HorizontalAlignment" Value="Right" />
          <Setter Property="Margin" Value="2,0,2,0" />
        </Style>
        <Style x:Key="DeleteHeaderStyle" TargetType="DataGridColumnHeader">
          <Setter Property="ToolTip" Value="Marks track for deletion with 'Execute Delete' Button."/>
        </Style>
        <Style x:Key="PlaylistHeaderStyle" TargetType="DataGridColumnHeader">
          <Setter Property="ToolTip" Value="Marks track for inclusion into selected playlist."/>
        </Style>
        <DataTemplate x:Key="PlaylistCheckBoxTemplate">
          <CheckBox IsChecked="{Binding Path=IsAddPlaylist, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                    IsEnabled="{Binding PlaylistCheckBoxIsEnabled}" Visibility="{Binding PlaylistCheckBoxVisibility}"
                    VerticalContentAlignment="Center" HorizontalAlignment="Center"/>
        </DataTemplate>
        <Style x:Key="OneClickCheckBoxStyle" TargetType="CheckBox">
          <!--overwriting DataGridCheckBoxColumn.ElementStyle makes the CheckBox to respond to every click -->
          <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
      </DataGrid.Resources>
      <DataGrid.RowStyle>
        <Style TargetType="DataGridRow">
          <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=Item.RowBackground}"/>
        </Style>
      </DataGrid.RowStyle>
      <DataGrid.Columns>
        <DataGridTextColumn Binding="{Binding Path=No, StringFormat=N0}" Header="#" IsReadOnly="True"  
                            ElementStyle="{StaticResource RightAlignStyle}" Width="45"/>
        <DataGridTextColumn Binding="{Binding Path=Track.Title}" Header="Title" IsReadOnly="True" Width="3*"/>
        <DataGridTextColumn Binding="{Binding Path=Track.Duration, StringFormat=mm\\:ss}" Header="Duration" 
                            ElementStyle="{StaticResource RightAlignStyle}" IsReadOnly="True" Width="SizeToHeader"/>
        <DataGridTextColumn Binding="{Binding Path=Track.Artists}" Header="Artists" IsReadOnly="True" Width="2*"/>
        <DataGridTextColumn Binding="{Binding Path=Track.Album}" Header="Album" IsReadOnly="True" Width="2*"/>
        <DataGridTextColumn Binding="{Binding Path=Track.AlbumTrack}" Header="Track" IsReadOnly="True" Width="SizeToHeader"/>
        <DataGridTextColumn Binding="{Binding Path=Track.Composers}" Header="Composers" IsReadOnly="True" Width="*"/>
        <DataGridTextColumn Binding="{Binding Path=Track.Publisher}" Header="Publisher" IsReadOnly="True" Width="*"/>
        <DataGridTextColumn Binding="{Binding Path=Track.Genres}" Header="Genres" IsReadOnly="True" Width="*"/>
        <DataGridTextColumn Binding="{Binding Path=Track.Year}" Header="Year   " IsReadOnly="True" Width="SizeToHeader"/>
        <DataGridTextColumn Binding="{Binding Path=Track.Location.Name}" Header="Location" IsReadOnly="True" Width="2*"/>
        <DataGridTextColumn Binding="{Binding Path=Playlists, Mode=OneWay}" Header="Playlists" IsReadOnly="True" Width="2*"/>
        <DataGridCheckBoxColumn Binding="{Binding Path=IsDeletion, UpdateSourceTrigger=PropertyChanged}" Header="Delete"
                                ElementStyle="{StaticResource OneClickCheckBoxStyle}" HeaderStyle="{StaticResource DeleteHeaderStyle}"/>
        <DataGridTemplateColumn Header="PList" CellTemplate="{StaticResource PlaylistCheckBoxTemplate}"
                                HeaderStyle="{StaticResource PlaylistHeaderStyle}" SortMemberPath="IsAddPlaylist"/>
      </DataGrid.Columns>
    </DataGrid>

    <local:PlayerControl Grid.Row="2" Grid.Column="0" x:Name="TrackPlayer"/>
  </Grid>
</Window>
